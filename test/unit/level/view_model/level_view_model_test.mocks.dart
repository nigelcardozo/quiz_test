// Mocks generated by Mockito 5.0.16 from annotations
// in quiz_test/test/unit/level/view_model/level_view_model_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:quiz_test/level/repository/answers_repository.dart' as _i2;
import 'package:quiz_test/models/answer.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [AnswerRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnswerRepository extends _i1.Mock implements _i2.AnswerRepository {
  MockAnswerRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Answer>> fetchAnswers(int? level) =>
      (super.noSuchMethod(Invocation.method(#fetchAnswers, [level]),
              returnValue: Future<List<_i4.Answer>>.value(<_i4.Answer>[]))
          as _i3.Future<List<_i4.Answer>>);
  @override
  String getLevelPath(int? level) =>
      (super.noSuchMethod(Invocation.method(#getLevelPath, [level]),
          returnValue: '') as String);
  @override
  String toString() => super.toString();
}
